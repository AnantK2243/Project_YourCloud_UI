name: CI/CD Pipeline

on:
    push:
        branches: [prod, main]

jobs:
    quality-check:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 22.12.0
                  cache: 'npm'
            - name: Install dependencies
              run: npm ci --no-audit --no-fund
            - name: Run quality checks
              run: npm run quality:check

    build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 22.12.0
                  cache: 'npm'
            - name: Install dependencies
              run: npm ci --no-audit --no-fund
            - name: Build application
              run: npm run build:prod

    deploy:
        if: github.ref == 'refs/heads/prod'
        needs: build
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write
        env:
            IMAGE_REPO: ghcr.io/anantk2243/project_yourcloud_ui
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
            - name: Generate version tag
              id: genver
              run: echo "version_tag=$(date -u +%Y%m%d-%H%M)-${GITHUB_SHA:0:7}" >> $GITHUB_OUTPUT
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3
            - name: Log in to GitHub Container Registry
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}
            - name: Build and push Docker image
              uses: docker/build-push-action@v5
              with:
                  context: .
                  file: ./Dockerfile
                  push: true
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
                  tags: |
                      ${{ env.IMAGE_REPO }}:latest
                      ${{ env.IMAGE_REPO }}:${{ github.sha }}
                      ${{ env.IMAGE_REPO }}:${{ steps.genver.outputs.version_tag }}
